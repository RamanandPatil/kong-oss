# service-and-route.yaml - Example Kong Service and Route Configuration
# This creates a basic service and route for testing

apiVersion: v1
kind: Namespace
metadata:
  name: example
---
# Sample backend service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpbin
  namespace: example
  labels:
    app: httpbin
spec:
  replicas: 2
  selector:
    matchLabels:
      app: httpbin
  template:
    metadata:
      labels:
        app: httpbin
    spec:
      containers:
      - name: httpbin
        image: kennethreitz/httpbin:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: httpbin
  namespace: example
  labels:
    app: httpbin
spec:
  selector:
    app: httpbin
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
# Kong Service configuration
apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: httpbin-service
  namespace: kong
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  protocol: http
  host: httpbin.example.svc.cluster.local
  port: 80
  path: /
  connect_timeout: 60000
  write_timeout: 60000
  read_timeout: 60000
  retries: 5
---
# Kong Route configuration
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: httpbin-route
  namespace: kong
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  service_name: httpbin-service
  protocols:
  - http
  - https
  methods:
  - GET
  - POST
  - PUT
  - DELETE
  paths:
  - /httpbin
  strip_path: true
  preserve_host: false
  regex_priority: 0
---
# Alternative: Using standard Kubernetes Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpbin-ingress
  namespace: example
  annotations:
    kubernetes.io/ingress.class: kong
    konghq.com/strip-path: "true"
    konghq.com/preserve-host: "false"
spec:
  rules:
  - host: api.local  # Change to your domain
    http:
      paths:
      - path: /httpbin
        pathType: Prefix
        backend:
          service:
            name: httpbin
            port:
              number: 80
